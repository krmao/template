__d(function(e,o,n,s,r){'use strict';var l=o(r[0]),t=o(r[1]),i=o(r[2]),d=o(r[3]),a=o(r[4]),c=o(r[5]),p=o(r[6]),h=o(r[7]),u=o(r[8]),S=o(r[9]),m=o(r[10]),R=o(r[11]).ScrollViewManager,T=o(r[12]).getInstanceFromNode;var b={Mixin:{mixins:[a.Mixin],scrollResponderMixinGetInitialState:function(){return{isTouching:!1,lastMomentumScrollBeginTime:0,lastMomentumScrollEndTime:0,observedScrollSinceBecomingResponder:!1,becameResponderWhileAnimating:!1}},scrollResponderHandleScrollShouldSetResponder:function(){return this.state.isTouching},scrollResponderHandleStartShouldSetResponder:function(e){var o=c.currentlyFocusedField();return'handled'===this.props.keyboardShouldPersistTaps&&null!=o&&e.target!==o},scrollResponderHandleStartShouldSetResponderCapture:function(e){var o,n,s=c.currentlyFocusedField(),r=this.props.keyboardShouldPersistTaps;return!(r&&'never'!==r||null==s||(o=e.target,n=T(o),n&&n.viewConfig&&('AndroidTextInput'===n.viewConfig.uiViewClassName||'RCTMultilineTextInputView'===n.viewConfig.uiViewClassName||'RCTSinglelineTextInputView'===n.viewConfig.uiViewClassName)))||this.scrollResponderIsAnimating()},scrollResponderHandleResponderReject:function(){},scrollResponderHandleTerminationRequest:function(){return!this.state.observedScrollSinceBecomingResponder},scrollResponderHandleTouchEnd:function(e){var o=e.nativeEvent;this.state.isTouching=0!==o.touches.length,this.props.onTouchEnd&&this.props.onTouchEnd(e)},scrollResponderHandleTouchCancel:function(e){this.state.isTouching=!1,this.props.onTouchCancel&&this.props.onTouchCancel(e)},scrollResponderHandleResponderRelease:function(e){this.props.onResponderRelease&&this.props.onResponderRelease(e);var o=c.currentlyFocusedField();!0===this.props.keyboardShouldPersistTaps||'always'===this.props.keyboardShouldPersistTaps||null==o||e.target===o||this.state.observedScrollSinceBecomingResponder||this.state.becameResponderWhileAnimating||(this.props.onScrollResponderKeyboardDismissed&&this.props.onScrollResponderKeyboardDismissed(e),c.blurTextInput(o))},scrollResponderHandleScroll:function(e){this.state.observedScrollSinceBecomingResponder=!0,this.props.onScroll&&this.props.onScroll(e)},scrollResponderHandleResponderGrant:function(e){this.state.observedScrollSinceBecomingResponder=!1,this.props.onResponderGrant&&this.props.onResponderGrant(e),this.state.becameResponderWhileAnimating=this.scrollResponderIsAnimating()},scrollResponderHandleScrollBeginDrag:function(e){t.beginScroll(),this.props.onScrollBeginDrag&&this.props.onScrollBeginDrag(e)},scrollResponderHandleScrollEndDrag:function(e){var o=e.nativeEvent.velocity;this.scrollResponderIsAnimating()||o&&(0!==o.x||0!==o.y)||t.endScroll(),this.props.onScrollEndDrag&&this.props.onScrollEndDrag(e)},scrollResponderHandleMomentumScrollBegin:function(e){this.state.lastMomentumScrollBeginTime=S(),this.props.onMomentumScrollBegin&&this.props.onMomentumScrollBegin(e)},scrollResponderHandleMomentumScrollEnd:function(e){t.endScroll(),this.state.lastMomentumScrollEndTime=S(),this.props.onMomentumScrollEnd&&this.props.onMomentumScrollEnd(e)},scrollResponderHandleTouchStart:function(e){this.state.isTouching=!0,this.props.onTouchStart&&this.props.onTouchStart(e)},scrollResponderHandleTouchMove:function(e){this.props.onTouchMove&&this.props.onTouchMove(e)},scrollResponderIsAnimating:function(){return S()-this.state.lastMomentumScrollEndTime<16||this.state.lastMomentumScrollEndTime<this.state.lastMomentumScrollBeginTime},scrollResponderGetScrollableNode:function(){return this.getScrollableNode?this.getScrollableNode():d.findNodeHandle(this)},scrollResponderScrollTo:function(e,o,n){if('number'==typeof e)console.warn('`scrollResponderScrollTo(x, y, animated)` is deprecated. Use `scrollResponderScrollTo({x: 5, y: 5, animated: true})` instead.');else{var s=e||{};e=s.x,o=s.y,n=s.animated}p.dispatchViewManagerCommand(u(this.scrollResponderGetScrollableNode()),p.RCTScrollView.Commands.scrollTo,[e||0,o||0,!1!==n])},scrollResponderScrollToEnd:function(e){var o=!1!==(e&&e.animated);p.dispatchViewManagerCommand(this.scrollResponderGetScrollableNode(),p.RCTScrollView.Commands.scrollToEnd,[o])},scrollResponderScrollWithoutAnimationTo:function(e,o){console.warn('`scrollResponderScrollWithoutAnimationTo` is deprecated. Use `scrollResponderScrollTo` instead'),this.scrollResponderScrollTo({x:e,y:o,animated:!1})},scrollResponderZoomTo:function(e,o){h(R&&R.zoomToRect,'zoomToRect is not implemented'),'animated'in e?(o=e.animated,delete e.animated):void 0!==o&&console.warn('`scrollResponderZoomTo` `animated` argument is deprecated. Use `options.animated` instead'),R.zoomToRect(this.scrollResponderGetScrollableNode(),e,!1!==o)},scrollResponderFlashScrollIndicators:function(){p.dispatchViewManagerCommand(this.scrollResponderGetScrollableNode(),p.RCTScrollView.Commands.flashScrollIndicators,[])},scrollResponderScrollNativeHandleToKeyboard:function(e,o,n){this.additionalScrollOffset=o||0,this.preventNegativeScrollOffset=!!n,p.measureLayout(e,d.findNodeHandle(this.getInnerViewNode()),this.scrollResponderTextInputFocusError,this.scrollResponderInputMeasureAndScrollToKeyboard)},scrollResponderInputMeasureAndScrollToKeyboard:function(e,o,n,s){var r=l.get('window').height;this.keyboardWillOpenTo&&(r=this.keyboardWillOpenTo.endCoordinates.screenY);var t=o-r+s+this.additionalScrollOffset;this.preventNegativeScrollOffset&&(t=Math.max(0,t)),this.scrollResponderScrollTo({x:0,y:t,animated:!0}),this.additionalOffset=0,this.preventNegativeScrollOffset=!1},scrollResponderTextInputFocusError:function(e){console.error('Error measuring text field: ',e)},UNSAFE_componentWillMount:function(){var e=this.props.keyboardShouldPersistTaps;m('boolean'!=typeof e,"'keyboardShouldPersistTaps={"+e+"}' is deprecated. Use 'keyboardShouldPersistTaps=\""+(e?'always':'never')+"\"' instead"),this.keyboardWillOpenTo=null,this.additionalScrollOffset=0,this.addListenerOn(i,'keyboardWillShow',this.scrollResponderKeyboardWillShow),this.addListenerOn(i,'keyboardWillHide',this.scrollResponderKeyboardWillHide),this.addListenerOn(i,'keyboardDidShow',this.scrollResponderKeyboardDidShow),this.addListenerOn(i,'keyboardDidHide',this.scrollResponderKeyboardDidHide)},scrollResponderKeyboardWillShow:function(e){this.keyboardWillOpenTo=e,this.props.onKeyboardWillShow&&this.props.onKeyboardWillShow(e)},scrollResponderKeyboardWillHide:function(e){this.keyboardWillOpenTo=null,this.props.onKeyboardWillHide&&this.props.onKeyboardWillHide(e)},scrollResponderKeyboardDidShow:function(e){e&&(this.keyboardWillOpenTo=e),this.props.onKeyboardDidShow&&this.props.onKeyboardDidShow(e)},scrollResponderKeyboardDidHide:function(e){this.keyboardWillOpenTo=null,this.props.onKeyboardDidHide&&this.props.onKeyboardDidHide(e)}}};n.exports=b},209,[146,210,211,43,214,101,99,18,215,29,32,20,216]);