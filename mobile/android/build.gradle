// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.kotlinVersion = "1.3.50"
    ext.ankoVersion = "0.8.2"
    //ext.walleVersion = "1.1.6"

    repositories {
        google()
        jcenter()
        mavenCentral()
        maven {
            url 'https://maven.google.com/'
            name 'Google'
        }
    }

    dependencies {
        //classpath "com.meituan.android.walle:plugin:$walleVersion"
        classpath "org.jetbrains.kotlin:kotlin-android-extensions:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"

        classpath 'com.android.tools.build:gradle:3.4.1'
        //classpath "com.tencent.bugly:symtabfileuploader:1.3.9"
        //classpath "com.tencent.bugly:tinker-support:1.0.8"
    }
}

allprojects {
    repositories {
        google()
        flatDir {
            dirs "file://$rootProject.projectDir/app/libraries/repo/aars"
        }
        jcenter()
        mavenCentral()
        maven { url "https://jitpack.io" }
        maven {
            url 'https://maven.google.com/'
            name 'Google'
        }
        maven {
            // All of React Native (JS, Android binaries) is installed from npm
            url "$rootDir/../../web/react_native/node_modules/react-native/android"
        }
    }
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }
    tasks.withType(Javadoc) {
        options.encoding = "UTF-8"
    }
}

task clean(type: Delete) {
    //noinspection GroovyAssignabilityCheck
    delete buildDir
}

apply from: "gradle/readme/scripts/tasktimings.gradle" //控制台输出任务耗时

// Define versions in a single place
ext {

    // Sdk and tools

    // react-native>=16
    // ijkplayer>=16
    // ijkplayer-arm64>=21
    // yasea>=16
    // yasea-arm64>=21
    minSdkVersion = 16

    // 设置为 26 如果适配Android 8.0 (targetSdkVersion = 26) 应用图标会出现适配问题, 如果已经做了适配操作,在谷歌 Pixel 2 图标显示正常, 但是在华为 Mate10 显示的却是圆形; 如果不适配则谷歌 Pixel 2 图标显示被一个框框包裹进去,
    //          所以目前设置为 targetSdkVersion = 25, 直接让 UI 给 5套图即可, 不做 android 8.0  Adaptive icons 适配
    // 设置为 27 会有Bug https://stackoverflow.com/questions/46980697/lock-screen-orientation-when-targeting-android-api-27-with-a-non-opaque-activity
    // https://dl.google.com/dl/android/maven2/index.html
    // https://developer.android.google.cn/studio/releases/gradle-plugin#updating-plugin
    targetSdkVersion = 28
    compileSdkVersion = 28
    buildToolsVersion = "28.0.3"

    // App dependencies
    supportLibraryVersion = "28.0.0"
    constraintLayoutVersion = "2.0.0-beta3"
    multidex = "1.0.3"

    // React Native Version
    reactNativeVersion = "0.55.4"

    guavaVersion = "22.0-android"
    junitVersion = "4.12"
    mockitoVersion = "1.10.19"
    espressoVersion = "2.2.2"
    rxjavaVersion = "2.1.0"
    rxkotlinVersion = "2.0.3"
    rxandroidVersion = "2.0.1"
    rxlifecycleVersion = "2.0.1"
    rxbindingVersion = "2.0.0"
    frescoVersion = "1.12.1"
    okhttpVersion = "3.13.1"
    retrofitVersion = "2.5.0"
    leakcanaryVersion = "1.6.3"
    crashreportUpgradeVersion = "1.3.1"
    libraryBaseVersion = "0.0.1-SNAPSHOT"

    //others
    debug = false
    versionCode = 1
    versionName = "1.0"
    versionRN = 1           // react native base bundle version

    Properties properties = new Properties()
    try {
        properties.load(project.rootProject.file("local.properties").newDataInputStream())
        debug = "true".equalsIgnoreCase(properties.getProperty("app.debug"))
        versionCode = Integer.parseInt(properties.getProperty("app.versionCode", versionCode.toString()))

        print("debug and versionCode read success,debug=${debug} and versionCode=${versionCode}")
    } catch (Exception e) {
        e.printStackTrace()
        print("debug and versionCode read failure,use default debug=${debug} and versionCode=${versionCode}")
    }
}
