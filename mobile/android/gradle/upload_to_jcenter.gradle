/**
 * 上传 android library aar files to jcenter
 *
 * 仓库中心: {@link "https://bintray.com/bintray/jcenter"} Web@gmail
 * 仓库中心: {@link "https://mvnrepository.com"}, {@link "https://issues.sonatype.org/browse/OSSRH-61823"} Web@krmao
 * 上传插件: {@link "https://github.com/bintray/gradle-bintray-plugin"}
 * 上传脚本: {@link "https://github.com/krmao/template/blob/c6cd89eec05c8e4ca527f70c3740437be04caf79/bluetoothprinter/uploadJcenter.gradle"}
 */
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

def BINTRAY_REPOSITORY = 'maven'
def BINTRAY_USER = 'krmao'
def BINTRAY_APIKEY = properties.getProperty("bintray.apikey").trim()

def LIBRARY_NAME = 'libsrn'
def LIBRARY_VERSION = '0.62.2.1'
def LIBRARY_GROUP_ID = 'com.smart.library'
def LIBRARY_PACKAGING = 'com.smart.library.reactnative'
def LIBRARY_DESCRIPTION = 'react native with tag v0.62.2 remote libs for android'

def LIBRARY_URL = 'https://github.com/krmao/template'
def LIBRARY_URL_GIT = 'https://github.com/krmao/template.git'

def LIBRARY_DEVELOPER_ID = 'krmao'
def LIBRARY_DEVELOPER_NAME = 'krmao'
def LIBRARY_DEVELOPER_EMAIL = '767709667@qq.com'

def LIBRARY_LICENSE_NAME = 'Apache License, Version 2.0'
def LIBRARY_LICENSE_URL = 'https://opensource.org/licenses/Apache-2.0'
def LIBRARY_LICENSES_ALL = ["Apache-2.0"]

group = LIBRARY_GROUP_ID
version = LIBRARY_VERSION

install {
    repositories.mavenInstaller {
        pom.project {
            name LIBRARY_NAME                           // optional
            url LIBRARY_URL
            packaging LIBRARY_PACKAGING
            description LIBRARY_DESCRIPTION             // optional

            licenses {
                license {
                    name LIBRARY_LICENSE_NAME
                    url LIBRARY_LICENSE_URL
                }
            }

            developers {
                developer {
                    id LIBRARY_DEVELOPER_ID
                    name LIBRARY_DEVELOPER_NAME
                    email LIBRARY_DEVELOPER_EMAIL
                }
            }

            scm {
                url LIBRARY_URL
                connection LIBRARY_URL_GIT
                developerConnection LIBRARY_URL_GIT
            }
        }
    }
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    // destinationDir = file("../javadoc/")
    failOnError false
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    //noinspection GrDeprecatedAPIUsage
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    //noinspection GrDeprecatedAPIUsage
    classifier = 'sources'
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

bintray {
    user = BINTRAY_USER
    key = BINTRAY_APIKEY

    configurations = ['archives']
    pkg {
        repo = BINTRAY_REPOSITORY                       // bintray 网站上的 repository 名字(需先添加)
        name = LIBRARY_NAME                             // 发布到 repository 上面的包名(需先添加)
        userOrg = ''                                    // bintray 的组织 id
        websiteUrl = LIBRARY_URL
        vcsUrl = LIBRARY_URL_GIT
        licenses = LIBRARY_LICENSES_ALL
        publish = true                                  // 是否是公开项目
    }
}

project.task('uploadToJcenter', group: "vin", description: "upload to Jcenter", dependsOn: ["bintrayUpload"]).doLast {
    println "***************upload to Jcenter finish!***************"
}