apply plugin: 'com.android.library'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

// 是否启用 fat aar, 默认 true, 主工程不直接依赖 flutter-bundle, 而是依赖产物 flutter-bundle.aar
def inbuiltThirdLibraries = true
if (inbuiltThirdLibraries) {
    apply plugin: 'com.kezong.fat-aar'
}

android {
    compileSdkVersion 27

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 27
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    android.libraryVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "${project.name}-${defaultConfig.versionName}-${variant.getBuildType().getName()}.aar"
        }
    }

    sourceSets {
        main {
            java {
                srcDirs '../app/src/main/java/io'
            }
        }
    }
}

flutter {
    source '../..'
}

afterEvaluate {
    assembleDebug.doLast { copyBundle.execute() }
    assembleRelease.doLast { copyBundle.execute() }
}

def srcDir = "../../build/${project.name}/outputs/aar"
def targetDir = "../../../android/app/libraries/repo/aars"
task copyBundle(type: Copy) {
    from srcDir
    into targetDir
    include('**/*.aar')
}

dependencies {
    compileOnly 'com.android.support:support-v4:27.1.1'
    compileOnly 'com.android.support:appcompat-v7:27.1.1'

    if (inbuiltThirdLibraries) {
        def flutterProjectRoot = rootProject.projectDir.parentFile.toPath()
        def plugins = new Properties()
        def pluginsFile = new File(flutterProjectRoot.toFile(), '.flutter-plugins')
        if (pluginsFile.exists()) {
            pluginsFile.withReader('UTF-8') { reader -> plugins.load(reader) }
        }
        plugins.each { name, _ ->
            println name
            embed project(path: ":$name", configuration: 'default')
        }
    }
}