// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.kotlinVersion = "1.6.10"
    ext.kotlinxCoroutinesVersion = "1.4.1"
    ext.ankoVersion = "0.8.2"
    ext.walleVersion = "1.1.6"
    ext.godeyeVersion = "3.2.1"
    ext.godeyeMethodCanaryVersion = "0.15.2"
    ext.reactNativeVersion = "0.69.3"

    repositories {
        google()
        maven { url 'https://jitpack.io' }
        maven { url 'https://plugins.gradle.org/m2/' }
        mavenCentral()
    }

    dependencies {
        //noinspection GradleDependency
        classpath 'com.android.tools.build:gradle:4.1.3'

        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"

        classpath "org.jetbrains.kotlin:kotlin-android-extensions:$kotlinVersion"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:1.4.30"
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.5" // https://github.com/bintray/gradle-bintray-plugin
        classpath 'com.github.kezong:fat-aar:1.3.8' // https://github.com/kezong/fat-aar-android
    }
}

allprojects {
    repositories {
        maven { url "${gradle.ext.modules.reactNative.nodeModulesPath}/react-native/android" } // All of React Native (JS, Android binaries) is installed from npm
        // react-native couldn't find DSO to load: libhermes.so
        maven { url("${gradle.ext.modules.reactNative.nodeModulesPath}/jsc-android/dist") } // Android JSC is installed from npm

        flatDir { dirs "file://$rootProject.projectDir/../repo" }
        flatDir { dirs "file://${gradle.ext.modules.reactNative.nodeModulesPath}/react-native/android/com/facebook/react/react-native/${reactNativeVersion}" }

        google()
        maven { url 'https://jitpack.io' }
        maven { url 'https://plugins.gradle.org/m2/' }
        mavenCentral()
    }
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }
    tasks.withType(Javadoc) {
        options.encoding = "UTF-8"
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }

    tasks.withType(JavaCompile).configureEach {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
}

task clean(type: Delete) {
    //noinspection GroovyAssignabilityCheck
    delete buildDir
}

// Define versions in a single place
ext {

    // Sdk and tools

    // react-native>=16
    // ijkplayer>=16
    // ijkplayer-arm64>=21
    // yasea>=16
    // yasea-arm64>=21
    minSdkVersion = 21

    // 设置为 26 如果适配Android 8.0 (targetSdkVersion = 26) 应用图标会出现适配问题, 如果已经做了适配操作,在谷歌 Pixel 2 图标显示正常, 但是在华为 Mate10 显示的却是圆形; 如果不适配则谷歌 Pixel 2 图标显示被一个框框包裹进去,
    //          所以目前设置为 targetSdkVersion = 25, 直接让 UI 给 5套图即可, 不做 android 8.0  Adaptive icons 适配
    // 设置为 27 会有Bug https://stackoverflow.com/questions/46980697/lock-screen-orientation-when-targeting-android-api-27-with-a-non-opaque-activity
    // https://dl.google.com/dl/android/maven2/index.html
    // https://developer.android.google.cn/studio/releases/gradle-plugin#updating-plugin
    // 设置为 29 报错 Media projections require a foreground service of type ServiceInfo.FOREGROUND_SERVICE_TYPE_MEDIA_PRO
    targetSdkVersion = 30
    compileSdkVersion = 30
    buildToolsVersion = "30.0.0" //"28.0.3"

    // App dependencies
    supportLibraryVersion = "28.0.0" // "28.0.0"
    constraintLayoutVersion = "2.0.0-beta3"

    // AndroidX
    androidXVersion = "1.1.0"
    androidXViewPagerVersion = "1.0.0"
    androidXCardViewVersion = "1.0.0"
    androidXLegacySupportV4Version = "1.0.0"
    androidXCoreVersion = "1.3.2"
    androidXMultidexVersion = "2.0.1"
    androidXAnnotationVersion = "1.2.0"
    androidXAppCompatVersion = "1.2.0"
    androidXRecyclerViewVersion = "1.2.0-rc01"
    androidXVectorDrawableVersion = "1.1.0"
    androidXFragmentVersion = "1.3.2"
    androidXConstraintlayoutVersion = "2.0.4"
    androidXMaterialVersion = "1.3.0"
    androidXLifecycleVersion = "2.3.0-beta01"

    smartRefreshLayoutVersion = "2.0.1"
    // guavaVersion = "24.1-jre"
    junitVersion = "4.12"
    mockitoVersion = "1.0.0"
    espressoVersion = "1.0.0"
    rxjavaVersion = "2.2.19"
    rxkotlinVersion = "2.4.0"
    rxandroidVersion = "2.1.1"
    rxbindingVersion = "2.0.0"
    frescoVersion = "1.12.1"
    okhttpVersion = "3.13.1"
    retrofitVersion = "2.9.0"
    leakcanaryVersion = "2.2"
    crashreportUpgradeVersion = "1.3.1"
    libraryBaseVersion = "0.0.1-SNAPSHOT"

    //others
    debug = false
    versionCode = 1
    versionName = "1.0"
    versionRN = 1           // react native base bundle version

    Properties properties = new Properties()
    try {
        properties.load(project.rootProject.file("local.properties").newDataInputStream())
        debug = "true".equalsIgnoreCase(properties.getProperty("app.debug"))
        versionCode = Integer.parseInt(properties.getProperty("app.versionCode", versionCode.toString()))

        print("debug and versionCode read success,debug=${debug} and versionCode=${versionCode}")
    } catch (Exception ignored) {
        print("debug and versionCode read failure,use default debug=${debug} and versionCode=${versionCode}")
    }
}
