debug: ${server_debug}

server:
    port: 5388
    servlet:
        context-path: /app-a

eureka:
    client:
        service-url:
            # 填写注册中心服务器地址, 注意不是本 eureka-client 的地址, 是 eureka-server 的地址
            defaultZone: http://127.0.0.1:5389/eureka
        # 是否需要将自己注册到注册中心
        register-with-eureka: true
        # 是否需要搜索服务信息
        fetch-registry: true
    instance:
        # 使用ip地址注册到注册中心
        prefer-ip-address: true
        # 注册中心列表中显示的状态参数, 对应 eureka-server 控制面板中的 Status 参数
        instance-id: 127.0.0.1:5388

# eureka-client-a 调用 eureka-client-b 时, 超时一秒就报错, 在 eureka-client-a 中配置
# https://www.cnblogs.com/zhainan-blog/p/11634621.html
ribbon:
    #建立连接超时时间
    ReadTimeout: 5000
    #读取资源超时间
    ConnectTimeout: 5000
    eager-load:
        # 开启饥饿加载模式
        enabled: false
        # 指定需要饥饿加载的服务名
        clients:  http://127.0.0.1:5389/eureka
        # 设置ribbon 最大连接数
        MaxTotalConnections: 5
        # 设置ribbon 每个host 最大的连接数
        MaxConnectionsPerHost: 5
        # 对当前实例重试的次数
        maxAutoRetries: 2
        # 切换实例的重试次数
        maxAutoRetriesNextServer: 2
        # 对所有的操作请求都进行重试
        okToRetryOnAllOperations: true
        # Http响应码进行重试
        retryableStatusCodes: 500,404,502
        ### 针对单个服务的 Ribbon 配置
        ###eureka-provider:
        ### ribbon:
        ###   # 基于配置文件形式的 针对单个服务的 Ribbon指定负载均衡策略
        ###   NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule

hystrix:
    command:
        default:
            circuitBreaker:
                enabled: false
                requestVolumeThreshold: 10
                errorThresholdPercentage: 50
                forceOpen: false
                forceClosed: false
            fallback:
                enabled: true
            execution:
                timeout:
                    # https://www.cnblogs.com/throwable/p/11961016.html
                    # 决定HystrixCommand#run()执行时是否允许超时，只有设置为true的时候，下面提到的“超时时间上限”才会有效。
                    enabled: false
            isolation:
                semaphore:
                    # 此配置项决定使用HystrixCommand#run()方法和ExecutionIsolationStrategy.SEMAPHORE隔离策略下并发请求数量的最高上限
                    maxConcurrentRequests: 4
                strategy: THREAD
                thread:
                    timeoutInMilliseconds: 10
                    # https://www.cnblogs.com/throwable/p/11961016.html
                    # 此配置项决定HystrixCommand#run()执行的时候调用超时的情况下是否中断。
                    interruptOnTimeout: true
                    # 此配置项决定HystrixCommand#run()执行的时候取消调用的情况下是否中断。
                    interruptOnCancel: true

    # https://blog.csdn.net/weixin_33809981/article/details/88678620
    threadpool:
        default:
            # 配置越小, JMeter 压测越容易复现
            coreSize: 1
            maxQueueSize: 4

feign:
    hystrix:
        enabled: true
    compression:
        request:
            enabled: true
            mime-types: ["text/xml", "application/xml","application/json"]
        response:
            enabled: true
    client:
        config:
            default:
                connectTimeout: 50 # 连接超时时间
                readTimeout: 50   # 读超时时间
                loggerLevel: full # 日志级别

security:
    user:
        name: root
        password: root

spring:
    main:
        # 如果调用多次 @EnableFeignClients, 会报以下错误, 将 allow-bean-definition-overriding 可以避免报错, 所以尽量只调用一次 @EnableFeignClients
        # org.springframework.beans.factory.support.BeanDefinitionOverrideException: Invalid bean definition with name 'APP-TEMPLATE-B.FeignClientSpecification'
        # defined in null: Cannot register bean definition [Generic bean: class [org.springframework.cloud.openfeign.FeignClientSpecification];
        allow-bean-definition-overriding: false
    application:
        # 服务注册名称 - 服务之间使用名称进行通讯
        name: APP-A
    jpa:
        hibernate:
            ddl-auto: none
        show-sql: false
    datasource:
        type: com.alibaba.druid.pool.DruidDataSource
        url: jdbc:mysql://${server_sql_ip}:3306/springboot?useUnicode=true&characterEncoding=UTF8&useCursorFetch=true&useSSL=false&allowPublicKeyRetrieval=true
        driver-class-name: com.mysql.cj.jdbc.Driver
        username: ${server_sql_user}
        password: ${server_sql_password}
        schema: classpath:/sql/schema-mysql.sql
        data: classpath:/sql/data-mysql.sql

        druid:
            filters: stat,wall,log4j2                      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
            maxActive: 20
            initialSize: 0
            maxWait: 60000                                # 配置获取连接等待超时的时间
            minIdle: 1
            timeBetweenEvictionRunsMillis: 60000          # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
            minEvictableIdleTimeMillis: 300000            # 配置一个连接在池中最小生存的时间，单位是毫秒
            validationQuery: select 'x'
            testWhileIdle: true
            testOnBorrow: false
            testOnReturn: false
            poolPreparedStatements: true
            maxPoolPreparedStatementPerConnectionSize: 20
            connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000 # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
            maxOpenPreparedStatements: 20

            useGlobalDataSourceStat: true                 # 合并多个DruidDataSource的监控数据
    resources:
        cache:
            # https://www.twblogs.net/a/5b8c454a2b7177188331c861
            period: 15
        static-locations: classpath:/META-INF/resources/,classpath:/resources/,classpath:/public/,classpath:/static/
    #    thymeleaf:
    #        suffix: .html
    #        prefix: classpath:/templates/
    jackson:
        default-property-inclusion: non_null
        date-format: yyyy-MM-dd HH:mm:ss
        time-zone: GMT+8
    http:
        multipart:
            max-file-size: 10MB
            max-request-size: 10MB

mybatis:
    configuration:
        mapUnderscoreToCamelCase: true # 是否开启自动驼峰命名规则（camel case）映射，即从经典数据库列名 A_COLUMN 到经典 Java 属性名 aColumn 的类似映射。
    type-aliases-package: com.housekeeper.service.background.database.model
    mapper-locations: classpath:mapper/**/*.xml                   # mapper的xml文件

#TRACE, DEBUG, INFO, WARN, ERROR, FATAL, OFF
logging:
    level:
        root: WARN
        com.smart: DEBUG
        static: WARN

        org.springframework:
            data: WARN
            security: WARN


# JWT http://www.jianshu.com/p/6307c89fe3fa
# https://stackoverflow.com/questions/27416327/configurationproperties-prefix-not-working
jwt:
    secret: ${server_jwt_secret}
    tokenPrefix: "Bearer "
    header: "Authorization"
    accessToken:
        expiration: 1800 #access_token 有效期 单位:秒
    refreshToken:
        expiration: 7200 #refresh_token 有效期 单位:秒
    authRoute:
        login: "auth/login"
        register: "auth/register"
        refreshToken: "auth/refreshToken"
