version = rootProject.ext.app_b_version

ext.finalName = 'spingcloud-app-b'
ext.finalPort = "5384"
apply from: "$rootProject.projectDir/gradle/script/docker.gradle"

//region 将 local.properties 参数读取到 rootProject.ext, 在此绑定到 application.yml
//processResources {
//    inputs.file("${rootProject.projectDir}/local.properties")
//    filesMatching("application.yml") {
//        logger.error(">>>>>>>>>>==============================>>>>>>>>>>")
//        logger.error("\n[processResources](filesMatched) ${it.path}\n")
//        logger.error("<<<<<<<<<<==============================<<<<<<<<<<")
//        expand(rootProject.properties)
//    }
//}
//endregion

dependencies {
    implementation project(":library-common")

    implementation group: 'org.springframework', name: 'spring-jdbc', version: '5.3.8' // https://stackoverflow.com/a/16478509/4348530

    implementation group: "org.springframework.boot", name: "spring-boot-starter-web", version: rootProject.ext.springBootStarterWebVersion

    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-config', version: rootProject.ext.springCloudConfigVersion
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign', version: rootProject.ext.springBootStarterOpenFeignVersion
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-eureka-client', version: rootProject.ext.springBootStarterNetflixEurekaClientVersion

    implementation group: 'de.codecentric', name: 'spring-boot-admin-starter-client', version: rootProject.ext.springBootStarterAdminVersion
    implementation group: 'com.fasterxml.jackson.module', name: 'jackson-module-kotlin', version: rootProject.ext.jacksonModuleKotlinVersion
}
