def finalName = 'spingcloud-discovery-eureka-server'
def finalPort = "5388"

/**
 * create docker image by jib
 *
 * > ./gradlew clean --info --stacktrace
 *
 * > ./gradlew eureka-server:clean eureka-server:jibDockerBuild --info --stacktrace
 * > docker run --rm -p5388:5388 -d --name spingcloud-discovery-eureka-server krmao/spingcloud-discovery-eureka-server
 * > curl localhost:5388
 * > docker rm spingcloud-discovery-eureka-server --force
 * > docker rmi krmao/spingcloud-discovery-eureka-server --force
 *
 * > ./gradlew eureka-server:clean eureka-server:jib --info --stacktrace
 * > docker pull krmao/spingcloud-discovery-eureka-server
 * > docker run --rm -p5388:5388 -d --name spingcloud-discovery-eureka-server krmao/spingcloud-discovery-eureka-server
 * > curl localhost:5388
 *
 * @see "https://github.com/GoogleContainerTools/jib/issues/2891#issuecomment-725708828"
 */
apply plugin: "com.google.cloud.tools.jib"
jib {
    from {
        image = 'java:8'
    }
    to {
        image = "docker.io/krmao/${finalName}"  // 上传后在 https://hub.docker.com/repositories 中查看
        auth {
            username = rootProject.ext.docker_io_user
            password = rootProject.ext.docker_io_password
        }
    }
    container {
        creationTime = 'USE_CURRENT_TIMESTAMP'
        jvmFlags = ['-Xms512m', '-Xdebug', '-Dfile.encoding=utf-8', '-Duser.timezone=Asia/Shanghai']
        ports = [finalPort]
    }
    dockerClient {
        executable = "/usr/local/bin/docker"
    }
}

dependencies {
    implementation("org.springframework.cloud:spring-cloud-starter-netflix-eureka-server")
}
